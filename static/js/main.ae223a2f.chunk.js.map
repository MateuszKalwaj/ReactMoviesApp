{"version":3,"sources":["APIKey.js","components/layout/PacMan.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/layout/PacmanLoading.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","id","Footer","href","setLoading","type","SearchForm","onChange","e","props","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","PacmanLoading","src","PacMan","style","width","margin","display","alt","MovieCard","movie","Poster","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Landing","loading","Movie","fetchMovie","match","params","movieInfo","imdbRating","Genre","Released","Rated","Director","Writer","Actors","Plot","Runtime","BoxOffice","rel","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ae223a2f.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey: 'a1df0de5'\r\n}","module.exports = __webpack_public_path__ + \"static/media/PacMan.772cfa17.gif\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    return (\r\n    <div>\r\n         <nav className=\"navbar navbar-light bg-light\">\r\n             <div className=\"container\">\r\n                 <div className=\"navbar-header\">\r\n                 <Link className=\"navbar-brand text-lg brand-text\" to=\"/\">\r\n              Quick Info Movie Database\r\n            </Link>\r\n                </div>\r\n                <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                    <li className=\"nav-item d-inline-block mr-4\">\r\n                        <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n                    </li>\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                        <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n                        </li>\r\n                </ul>\r\n                </div>\r\n        </nav> \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"page-footer font-small blue\">\r\n                <div className=\"footer-copyright text-center py-3\">Â© 2020 Copyright: King of this site with the little help of\r\n  <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a> and\r\n  <a href=\"https://www.omdbapi.com/\"> omdbapi</a>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING} from './types'\r\nimport axios from 'axios'\r\n\r\nimport {APIKey} from '../APIKey'\r\n\r\nexport const searchMovie = text => dispatch => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    })\r\n}\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    axios\r\n        .get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response => \r\n            dispatch ({\r\n            type: FETCH_MOVIES,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n    axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response => dispatch ({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data\r\n    }))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}","//this will contain all the types of our actions\r\n\r\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE'\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES'\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE'\r\nexport const LOADING = 'LOADING'","import React, { Component } from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {searchMovie, fetchMovies, setLoading} from '../../actions/searchActions'\r\n\r\nexport class SearchForm extends Component {\r\n\r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n\r\n    onSubmit = e => {\r\n      e.preventDefault();\r\n      this.props.fetchMovies(this.props.text);\r\n      this.props.setLoading();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\r\n          </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\"Search Movies, TV Series ...\"\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n    }\r\n    const mapStateToProps = state => ({\r\n        text: state.movies.text\r\n    })\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {searchMovie, fetchMovies, setLoading})\r\n  (SearchForm);\r\n","import React from 'react'\r\nimport PacMan from './PacMan.gif'\r\n\r\nfunction PacmanLoading() {\r\n    return (\r\n        <div>\r\n            <img\r\n           src={PacMan}\r\n           style={{width: '200px', margin: 'auto', display: 'block'}}\r\n           alt=\"Loading...\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PacmanLoading\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class MovieCard extends Component {\r\n    render() {\r\n        const {movie} = this.props\r\n        return (\r\n         \r\n                 <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body background-color text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n          <h5 className=\"text-color card-title\">\r\n            {movie.Title} - {movie.Year}\r\n          </h5>\r\n          {/* <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n            Movie Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link> */}\r\n          <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n            Movie Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MovieCard from './MovieCard'\r\n\r\n// import {connect} from 'react-redux'\r\n\r\n\r\nexport class MoviesContainer extends Component {\r\n    render() {\r\n        const {movies} = this.props\r\n\r\n        let content = ''\r\n\r\n        content =\r\n        movies.Response === 'True'\r\n          ? movies.Search.map((movie, index) => (\r\n              <MovieCard key={index} movie={movie} />\r\n            ))\r\n          :null;\r\n        return (\r\n            <div className=\"row\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\n\r\nexport default connect(mapStateToProps) (MoviesContainer)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport SearchForm from './SearchForm'\r\nimport PacmanLoading from '../layout/PacmanLoading'\r\nimport MoviesContainer from './MoviesContainer'\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n        const {loading} = this.props\r\n        return (\r\n            <div className =\"container\">\r\n                <SearchForm />\r\n                {loading ? <PacmanLoading /> : <MoviesContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps) (Landing)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {fetchMovie, setLoading} from '../../actions/searchActions'\r\nimport { Link } from 'react-router-dom'\r\nimport PacmanLoading from '../layout/PacmanLoading'\r\n\r\nexport class Movie extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMovie(this.props.match.params.id)\r\n        this.props.setLoading();\r\n    }\r\n\r\n    render() {\r\n        const { loading, movie } = this.props;\r\n        \r\n        let movieInfo = ( \r\n          <div className=\"container\">\r\n       <div className=\"row\">\r\n         <div className=\"col-md-4 card card-body\">\r\n           <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n         </div>\r\n         <div className=\"col-md-8\">\r\n           <h2 className=\"mb-4\">{movie.Title}</h2>\r\n           <ul className=\"list-group\">\r\n             <li className=\"list-group-item\">\r\n               <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Genre:</strong> {movie.Genre}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Released:</strong> {movie.Released}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Rated:</strong> {movie.Rated}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Director:</strong> {movie.Director}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Writer:</strong> {movie.Writer}\r\n             </li>\r\n             <li className=\"list-group-item\">\r\n               <strong>Actors:</strong> {movie.Actors}\r\n             </li>\r\n           </ul>\r\n         </div>\r\n       </div>\r\n       <div className=\"row\">\r\n         <div className=\"card card-body bg-dark my-5 text-light\">\r\n           <div className=\"col-md-12\">\r\n             <h3>About </h3>\r\n            {movie.Plot}\r\n            <br></br>\r\n            {movie.Runtime}\r\n            <br></br>\r\n            <br></br>\r\n            {movie.BoxOffice}\r\n             <hr />\r\n             <a\r\n               href={'https://www.imdb.com/title/' + movie.imdbID}\r\n               target=\"_blank\"\r\n               rel=\"noopener noreferrer\"\r\n               className=\"btn btn-primary\"\r\n             >\r\n               View on IMDB\r\n             </a>\r\n             <Link to=\"/\" className=\"btn btn-default text-light\">\r\n               Go Back To Search\r\n             </Link>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n        )\r\n\r\n         let content = loading ? <PacmanLoading /> : movieInfo\r\n        return (\r\n            <div>{content}</div>\r\n        )\r\n\r\n        }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchMovie,setLoading})(Movie)\r\n","import {SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING} from '../actions/types'\r\n\r\n//need to create here initial state\r\n\r\nconst initialState = {\r\n    text:'',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIES:\r\n            return{\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                 movie: action.payload,\r\n                 loading: false\r\n            };\r\n            case LOADING:\r\n            return{\r\n                ...state,\r\n                 loading: true\r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst middleware =[thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\n\nimport store from './store';\nimport {HashRouter as Router, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n<div>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/movie/:id\" component={Movie}/>\n          <Footer /> \n</div>\n        </Router>\n      </Provider>\n    ) \n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}